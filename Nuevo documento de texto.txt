<template>
<form id="formCliente" method="post" v-on:submit.prevent="onSubmit">

    <div class="row m-b-20">
        <div class="col-xs-12 col-xl-4">
            <div class="form-group bmd-form-group">
                <label for="Cliente">Cliente *</label>
                <select v-validate data-vv-rules="required" data-vv-name="Cliente" class="form-control pmd-select2 select-with-search" name="Cliente" id="ClienteId" v-model="model.ClienteId">
    <option v-for="item in model.ClienteList" v-bind:value="item.Value" v-bind:key="item.Value">
      {{ item.Text }}
    </option>
  </select>
                <span v-show="errors.has('Cliente')" class="text-danger">{{ errors.first('Cliente') }}</span>

            </div>
        </div>

        <div class="col-xs-12 col-xl-4">
            <div class="form-group bmd-form-group">
                <label for="Marca">Marca *</label>
                <select v-validate data-vv-rules="required" data-vv-name="Marca" class="form-control pmd-select2 select-with-search" name="Marca" id="MarcaId" v-model="model.MarcaId">
    <option v-for="item in model.MarcaList" v-bind:value="item.Value" v-bind:key="item.Value">
      {{ item.Text }}
    </option>
  </select>
                <span v-show="errors.has('Marca')" class="text-danger">{{ errors.first('Marca') }}</span>
            </div>
        </div>

        <div class="col-xs-12 col-xl-4">
            <div class="form-group bmd-form-group">
                <label for="Modelo">Modelo *</label>
                <select data-vv-name="Modelo" v-validate data-vv-rules="required" name="Modelo" class="form-control pmd-select2 select-with-search" id="ModeloId" v-model="model.ModeloId">
    <option v-for="item in model.ModeloList" v-bind:value="item.Value" v-bind:key="item.Value">
      {{ item.Text }}
    </option>
  </select>
    <span v-show="errors.has('Modelo')" class="text-danger">{{ errors.first('Modelo') }}</span>
            </div>
        </div>
    </div>

    <div class="row m-b-20">
        <div class="col-xs-12 col-xl-12">
            <center>
                <button :disabled="errors.any()" type="submit" class="btn btn-primary" value="Guardar y Salir">Guardar y Salir</button>
                <button :disabled="errors.any()" type="submit" class="btn btn-success guardarNuevo" value="Guardar y Nuevo">Guardar y Nuevo</button>
                <a class="btn btn-danger" href="/Cliente/Lista">Cancelar</a>
            </center>
        </div>
    </div>
</form>
</template>

<script>
export default {
    name: "vehiculo",
    data: function () {
        return {
            model: {
                Id: 0,
                NombreCliente: "",
                ClienteList: [],
                MarcaList: [],
                ModeloList: [],
                ModeloId: '',
                MarcaId: '',
                ClienteId: ''
            }
        };
    },
      created: function () {
        VeeValidate.Validator.extend("verify_coupon", {
            getMessage: field => `The ${field} is not a valid coupon.`,
            validate: value =>
                new Promise(resolve => {
                    const validCoupons = ["SUMMER2017", "WINTER2017", "FALL2017"];
                    resolve({
                        valid: value && validCoupons.indexOf(value.toUpperCase()) > -1
                    });
                })
        });
    },
    methods: {
        GetDataVehicle(id) {
            var self = this._data.model;
            $.post("/Vehiculo/GetData", {
                id: id
            }, function (r) {
                self.NombreCliente = r.NombreCliente;
                self.ClienteList = r.ClienteList;
                self.MarcaList = r.MarcaList;
                self.ModeloList = r.ModeloList;
                self.ModeloId = r.ModeloId;
                self.MarcaId = r.MarcaId;
                self.ClienteId = r.ClienteId;
                self.Id = r.Id;
            }, 'json')
        },
      onSubmit: function () {
            this.$validator
                .validateAll()
                .then(result => {
                    if (result) {
                        if(this.model.Id !=0)
                        {
                            console.log(this.model.Id)
                            console.log(this)
                            document.getElementById("formCliente").action = "/Vehiculo/Editar";
                        }
                        else{
                            document.getElementById("formCliente").action = "/Vehiculo/Crear";
                        }
                        $("#formCliente").submit();
                    } else {
                        toastr["error"]("Complete los campos requeridos", "Notificación:");

                        toastr.options = {
                            closeButton: true,
                            debug: false,
                            newestOnTop: false,
                            progressBar: false,
                            positionClass: "toast-top-right",
                            preventDuplicates: false,
                            onclick: null,
                            showDuration: "300",
                            hideDuration: "1000",
                            timeOut: "5000",
                            extendedTimeOut: "1000",
                            showEasing: "swing",
                            hideEasing: "linear",
                            showMethod: "fadeIn",
                            hideMethod: "fadeOut"
                        };
                    }
                })
                .catch(() => {});
        }
    }
};
</script>

<style>
.error {
    margin: 0px !important;
    background-image: linear-gradient(to top, red 2px, rgba(13, 71, 161, 0) 2px), linear-gradient(to top, rgba(0, 0, 0, 0.1) 1px, transparent 1px) !important;
}

.text-danger {
    font-size: 12px;
    color: #e84444;
}

.form-control.error {
    background-image: linear-gradient(to top, red 3px, rgba(13, 71, 161, 0) 2px), linear-gradient(to top, rgba(0, 0, 0, 0.1) 1px, transparent 1px) !important;
}
</style>
